import logging
from aiogram import Router
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from models import Database
from states import HumanDesignStates
from keyboards import language_keyboard

logger = logging.getLogger(__name__)

router = Router()

db = Database()

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    user_id = message.from_user.id
    username = message.from_user.username or f"user_{user_id}"
    
    db.add_user(user_id, username)
    
    await state.set_state(HumanDesignStates.SELECT_LANGUAGE)
    await message.answer(
        "üåü –î–æ–±—Ä—ã–π –¥–µ–Ω—å! Hello!\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Please choose your language:",
        reply_markup=language_keyboard
    )
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –∫–æ–º–∞–Ω–¥—É /start")

@router.message(HumanDesignStates.SELECT_LANGUAGE)
async def handle_language_selection(message: Message, state: FSMContext):
    user_id = message.from_user.id
    language = message.text.strip()

    cleaned_language = language.replace("üá∑üá∫", "").replace("üá∫üá∏", "").strip()

    if cleaned_language not in ["–†—É—Å—Å–∫–∏–π", "English"]:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö / Please select a language from the options.",
            reply_markup=language_keyboard
        )
        logger.warning(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –æ—Ç user_id {user_id}: {language} (–æ—á–∏—â–µ–Ω–æ: {cleaned_language})")
        return

    db.set_language(user_id, cleaned_language)
    
    if cleaned_language == "–†—É—Å—Å–∫–∏–π":
        welcome_text = (
            "‚ú® –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç –ø–æ Human Design.\n\n"
            "–Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è, "
            "–∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç —Ç–≤–æ—é –∏—Å—Ç–∏–Ω–Ω—É—é –ø—Ä–∏—Ä–æ–¥—É –∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã–π –ø—É—Ç—å. "
            "–Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ Human Design, –ø–æ–º–æ—á—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–≤–æ—é –±–æ–¥–∏–≥—Ä–∞—Ñ–∏—é, "
            "–¥–∞—Ç—å –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–µ —Å–æ–≤–µ—Ç—ã, –∫–∞–∫ –ø—Ä–∏–º–µ–Ω—è—Ç—å Human Design –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏, "
            "—á—Ç–æ–±—ã –∂–∏—Ç—å –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ —Å–æ —Å–≤–æ–µ–π —ç–Ω–µ—Ä–≥–∏–µ–π.\n\n"
            "–ó–∞–¥–∞–≤–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –∏ —è –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è! üìö\n\n"
            "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –∫–æ–º–∞–Ω–¥–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É–π /help."
        )
    else:
        welcome_text = (
            "‚ú® Hello! I am your personal Human Design expert.\n\n"
            "I was created to help you understand the unique system of self-discovery "
            "that reveals your true nature and life path. "
            "I can answer any question about Human Design, help you decipher your bodygraph, "
            "and provide practical tips on how to apply Human Design in everyday life "
            "to live in harmony with your energy.\n\n"
            "Ask your question right now, and I'll help you figure it out! üìö\n\n"
            "If you need help with commands, use /help."
        )
    
    await message.answer(welcome_text, reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
    await state.set_state(HumanDesignStates.MAIN_CONVERSATION)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID {user_id} –≤—ã–±—Ä–∞–ª —è–∑—ã–∫: {cleaned_language}")