import logging
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from models import Database
from states import HumanDesignStates
from keyboards import language_keyboard

logger = logging.getLogger(__name__)

router = Router()

db = Database()

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    user_id = message.from_user.id
    username = message.from_user.username or f"user_{user_id}"
    
    db.add_user(user_id, username)
    
    await state.set_state(HumanDesignStates.SELECT_LANGUAGE)
    await message.answer(
        "üåü –î–æ–±—Ä—ã–π –¥–µ–Ω—å! Hello!\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Please choose your language:",
        reply_markup=language_keyboard
    )
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –∫–æ–º–∞–Ω–¥—É /start")

@router.message(HumanDesignStates.SELECT_LANGUAGE)
async def handle_language_selection(message: Message, state: FSMContext):
    user_id = message.from_user.id
    language = message.text.strip()

    cleaned_language = language.replace("üá∑üá∫", "").replace("üá∫üá∏", "").strip()

    if cleaned_language not in ["–†—É—Å—Å–∫–∏–π", "English"]:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö / Please select a language from the options.",
            reply_markup=language_keyboard
        )
        logger.warning(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –æ—Ç user_id {user_id}: {language} (–æ—á–∏—â–µ–Ω–æ: {cleaned_language})")
        return

    db.set_language(user_id, cleaned_language)
    
    if cleaned_language == "–†—É—Å—Å–∫–∏–π":
        welcome_text = (
            "‚ú®–ü—Ä–∏–≤–µ—Ç! –Ø @DesignAssistantBot ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ Human Design.\n"
            "–ó–Ω–∞—é –≤—Å–µ –æ —Ç–∏–ø–∞—Ö, —Ü–µ–Ω—Ç—Ä–∞—Ö, –ø—Ä–æ—Ñ–∏–ª—è—Ö, –∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç–∞—Ö, –≤–æ—Ä–æ—Ç–∞—Ö –∏ –∫–∞–Ω–∞–ª–∞—Ö.\n\n"
            "–ó–∞–¥–∞–≤–∞–π —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å, –∏ —è –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è! üìö"
        )
    else:
        welcome_text = (
            "Hi! I'm @DesignAssistantBot, a Human Design expert. "
            "I can answer questions about types, centers, profiles, authority, gates, lines, and channels. "
            "Ask away, and I'll help you understand! üòä\n\n"
            "Use /chat to ask questions or /reset to clear context."
        )
    
    await message.answer(welcome_text)
    await state.set_state(HumanDesignStates.MAIN_CONVERSATION)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID {user_id} –≤—ã–±—Ä–∞–ª —è–∑—ã–∫: {cleaned_language}")